provider "aws" {
  region = "us-west-2"
}

resource "aws_vpc" "eks_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "eks_subnet" {
  vpc_id     = aws_vpc.eks_vpc.id
  cidr_block = "10.0.1.0/24"
}

resource "aws_eks_cluster" "example" {
  name     = "example-eks-cluster"
  role_arn = aws_iam_role.eks_cluster.arn

  vpc_config {
    subnet_ids = [aws_subnet.eks_subnet.id]
  }
}

resource "aws_iam_role" "eks_cluster" {
  name = "eks-cluster"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "eks.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "eks_cluster_policy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
  role       = aws_iam_role.eks_cluster.name
}

resource "aws_iam_role_policy_attachment" "eks_service_policy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
  role       = aws_iam_role.eks_cluster.name
}

resource "aws_eks_node_group" "example" {
  cluster_name    = aws_eks_cluster.example.name
  node_group_name = "example-nodegroup"

  scaling_config {
    desired_size = 2
    max_size     = 2
    min_size     = 2
  }

  remote_access {
    ec2_ssh_key = "example"
    source_security_group_id = aws_security_group.node_group_access.id
  }

  subnet_ids = [aws_subnet.eks_subnet.id]

  node_group_ami_id = data.aws_eks_cluster.default.node_group_defaults.ami_id
  instance_type     = "t3.small"
  node_group_name   = "example-nodegroup"
  node_role_arn     = aws_iam_role.eks_nodegroup_role.arn
  tags = {
    Terraform = "true"
  }
}

resource "aws_security_group" "node_group_access" {
  name_prefix = "node-group-access"
  vpc_id      = aws_vpc.eks_vpc.id

  ingress {
    from_port = 0
    to_port   = 65535
    protocol  = "tcp"
    cidr_blocks = ["10.0.0.0/16"]
  }

  egress {
    from_port = 0
    to_port   = 65535
    protocol  = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

data "aws_eks_cluster" "default" {
  name = aws_eks_cluster.example.name
}

data "aws_eks_cluster_auth" "example" {
  name = aws_eks_cluster.example.name
}

output "kubeconfig" {
  value = data.aws_eks_cluster_auth.example.kubeconfig
}
